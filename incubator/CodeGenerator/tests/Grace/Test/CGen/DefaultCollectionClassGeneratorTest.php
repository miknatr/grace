<?php

namespace Grace\CGen;
//use Grace\Test;
require_once dirname(__FILE__) . '/../../../../src/Grace/CGen/DefaultCollectionClassGenerator.php';
include dirname(__FILE__) . '/classSource/TestClass.php';
include dirname(__FILE__) . '/classSource/additionalClass.php';
/**
 * Test class for DefaultCollectionClassGenerator.
 * Generated by PHPUnit on 2012-04-12 at 13:34:35.
 */
class DefaultCollectionClassGeneratorTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var DefaultCollectionClassGenerator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new DefaultCollectionClassGenerator("\Grace\CGen\TestClass", "./forClasses", "additionalClass");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::generate
     * @todo   Implement testGenerate().
     */
    public function testGenerate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::writeClass
     * @todo   Implement testWriteClass().
     */
    public function testWriteClass()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::getClassBody
     * @todo   Implement testGetClassBody().
     */
    public function testGetClassBody()
    {
        // Remove the following lines when you implement this test.
        $ext = "<?php\nnamespace Grace\TestNamespace\nclass TestClass extends TestClassAbstract {\n}";
        $this->assertEquals($ext, $this->object->getClassBody());
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::getParentClassBody
     * @todo   Implement testGetParentClassBody().
     */
    public function testGetParentClassBody()
    {
        // Remove the following lines when you implement this test.
        //include_once dirname(__FILE__) .'/classSource/TestClass.php';
        //include_once dirname(__FILE__) .'/classSource/ParentTestConstruct.php';
        $ext = "<?php\nnamespace Grace\TestNamespace\nclass TestClass extends TestClassAbstract {\n}";
        //$this->assertEquals($ext, $this->object->getClassBody());
        $this->object = new DefaultCollectionClassGenerator("\Grace\CGen\TestClass", "./forClasses", "additionalClass");
        //print_r($this->object->getParentClassBody());
        $this->assertEquals($ext, $this->object->getClassBody());
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::getPreparedData
     * @todo   Implement testGetPreparedData().
     */
    public function testGetPreparedData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers Grace\CGen\DefaultCollectionClassGenerator::getItemsByMod
     * @todo   Implement testGetItemsByMod().
     */
    public function testGetItemsByMod()
    {
        // Remove the following lines when you implement this test.
        $actual = $this->object->getPreparedData();
        $mustBe = array(
            "methods" => array(
                "public"    => array(
                    0 => new \ReflectionMethod("Grace\CGen\TestClass", "__construct"),
                    1 => new \ReflectionMethod("Grace\CGen\TestClass", "getChildPublicInnerMethod"),
                    2 => new \ReflectionMethod("Grace\CGen\ParentTestConstruct", "getParentPublicInnerMethod"),
                ),
                "private"   => array(
                    0 => new \ReflectionMethod("Grace\CGen\TestClass", "setChildPublicInnerMethod"),
                    1 => new \ReflectionMethod("Grace\CGen\ParentTestConstruct", "setParentPrivateInnerMethod")
                ),
                "protected" => array(),
                "static"    => array()
            ),
            "fields"  => array(
                "public"    => array(
                    0 => new \ReflectionProperty("Grace\CGen\TestClass", "childVar")
                ),
                "private"   => array(
                    0 => new \ReflectionProperty("Grace\CGen\ParentTestConstruct", "parentField")
                ),
                "protected" => array(),
                "static"    => array()
            )

        );
        $this->assertEquals($mustBe, $actual);
    }
}

?>
